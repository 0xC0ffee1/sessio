syntax = "proto3";

option java_multiple_files = true;
option java_package = "net.c0ffee1.sessio.clientipc";
option java_outer_classname = "SessioClientIPC";

package clientipc;



service ClientIPC {
    rpc NewConnection(NewConnectionRequest) returns (NewConnectionResponse);
    rpc NewSession(NewSessionRequest) returns (NewSessionResponse);

    rpc GenKeys(GenKeysRequest) returns (GenKeysResponse);

    //Open a SSH channel and a bi-directional stream
    rpc OpenChannel(stream Msg) returns (stream Msg);

    //SFTP RPCs
    rpc OpenSftpChannel(SftpRequest) returns (SftpRequestResponse);
    rpc ListDirectory(Path) returns (FileList);
    rpc FileDownload(FileTransferRequest) returns (stream FileTransferStatus);
    rpc FileUpload(FileTransferRequest) returns (stream FileTransferStatus);
}

message SftpRequest{
    string session_id = 1;
}

message SftpRequestResponse{
    string channel_id = 1;
}

message Msg{
    oneof type{
        Data data = 1;
        PtyRequest pty_request = 2;
        ShellRequest shell_request = 3;
        ChannelInit channel_init = 4;
    }

    message Data{
        bytes payload = 1;
    }

    message PtyRequest{
        uint32 col_width = 1;
        uint32 row_height = 2;
    }

    message ShellRequest{
        
    }

    message ChannelInit{
        string session_id = 1;
    }
}

//The messages a client uses to interact with the sftp session
message ListDir{
    string path = 1;
    string session_id = 2;
}

message Path {
    string path = 1;
    string session_id = 2;
}

message FileTransferRequest {
    string session_id = 1;
    string remote_path = 2;
    string local_path = 3;
}

message FileTransferStatus {
    oneof typ{
        Progress progress = 1;
        Completed completed = 2;
    }
    message Progress{
        int32 bytes_read = 1;
    }
    message Completed{
        
    }
}

message FileWriteRequest {
    string file_handle_id = 1;
    bytes data = 2;
    string session_id = 3;
}

message FileWriteResponse {
    bool success = 1;
}

message FileReadRequest {
    string file_handle_id = 1;
    int32 buf_size = 2;
    string session_id = 3;
}

message FileReadResponse {
    bytes data = 1;
}

message FileCloseResponse {
    bool success = 1;
}

message FileMetadataRequest {
    string path = 1;
    string session_id = 2;
}

message FileMetadataResponse {
    string path = 1;
    uint64 size = 2;
    uint64 last_modified = 3; // Timestamp
    bool is_directory = 4;
}

message DirMetadata {
    string path = 1;
}


message FileList{
    repeated FileData files = 1;
}

message FileData{
    string file_name = 1;
    uint64 file_size = 2;
    string file_path = 3;
    bool is_dir = 4;
}

message PtyRequestResponse{
    string channel_id = 1;
}

message GenKeysRequest{
    string key_path = 1;
}
message GenKeysResponse{
    string key_path = 1;
}

message StreamRequest {
    string session_id = 2;
    bytes data = 1;
}

message StreamResponse {
    bytes data = 1;
}

message NewSessionRequest {
    string connection_id = 1;
    string username = 2;
    string private_key = 3;
    string known_hosts_path = 4;
}

message NewSessionResponse {
    string session_id = 1;
}

//Opening a new connection locally
message NewConnectionRequest {
    string coordinator_url = 1;
    string target_id = 2;
}

message NewConnectionResponse {
    string connection_id = 1;
}